-- ORDER BY절 : SELECT한 컬럼을 가지고 정렬할 때 사용
-- ORDER BY 컬럼명 | 컬럼 별칭 | 컬럼 나열 순번 [ASC] | DESC
SELECT EMP_ID, EMP_NAME, SALARY 급여, DEPT_CODE
FROM EMPLOYEE
--ORDER BY EMP_NAME;    -- 오름차순
--ORDER BY EMP_NAME ASC;  -- 오름차순
--ORDER BY EMP_NAME DESC;   -- 내림차순
--ORDER BY DEPT_CODE NULLS FIRST;     -- NULL을 맨 위에 두고 정렬하라
--ORDER BY 2; -- 컬럼의 나열 순번으로 오름차순 // 권장하지 않는 방법
ORDER BY 급여;    -- 별칭으로 오름차순 정렬

/* 최대 다 들어간 문장
    5 : SELECT  컬럼
    1 : FROM    참조 대상 LIKE 판
    2 : WHERE   조건
    3 : GROUP BY    
    4 : HAVING
    6 : ORDER BY
*/

-- GROUP BY : 여러 개의 값을 묶어서 하나로 처리할 목적으로 사용
SELECT DEPT_CODE, SUM(SALARY)
FROM EMPLOYEE; -- 결과 값의 개수가 다름

SELECT DEPT_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE;

-- EMPOYEE 테이블에서 부서코드와 보너스를 받는 사원수를 조회하고 부서코드 순으로 정렬
SELECT DEPT_CODE, COUNT(BONUS)
FROM EMPLOYEE
GROUP BY DEPT_CODE
ORDER BY DEPT_CODE;

-- EMPLOYEE 테이블에서 부서 코드 별 그룹을 지정하여 부서코드, 그룹 별 급여의 합계, 그룹 별 급여의 평균,
-- 인원수를 조회하고 부서 코드 순으로 정렬
SELECT DEPT_CODE 부서코드, SUM(SALARY) "그룹 별 급여 합계", FLOOR(AVG(SALARY)) "그룹 별 급여의 평균", COUNT(*) 인원수
FROM EMPLOYEE
GROUP BY DEPT_CODE
ORDER BY DEPT_CODE;

SELECT EMP_NAME
FROM EMPLOYEE
WHERE DEPT_CODE IS NULL;


-- EMPLOYEE 테이블에서 직급코드, 보너스를 받는 사원수를 조회하여 직급코드 순으로 오름차순 정렬
SELECT JOB_CODE, COUNT(BONUS)
FROM EMPLOYEE
WHERE BONUS IS NOT NULL     -- COUNT(BONUS)가 0인 직급은 보고 싶지 않을 때
GROUP BY JOB_CODE
ORDER BY JOB_CODE;

-- EMPLOYEE 테이블에서 성별과 성별 별 급여 평균, 급여 합계, 인원 수 조회하고 인원 수로 내림차순 정렬
SELECT DECODE(SUBSTR(EMP_NO,8,1), 1, '남', 2, '여') 성별, AVG(SALARY) 평균, SUM(SALARY) 합계, COUNT(*) 인원수
FROM EMPLOYEE
GROUP BY DECODE(SUBSTR(EMP_NO,8,1), 1, '남', 2, '여') 
ORDER BY 인원수 DESC;

-- EMPLOYEE 테이블에서 부서 코드별로 같은 직급인 사원의 급여 합계 조회
SELECT DEPT_CODE, JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE, JOB_CODE;       -- 여러 컬럼을 함께 묶을 수 있음

-- HAVING : 그룹함수로 구해 올 그룹에 대해 조건을 설정할 때 사용
-- 부서코드와 급여 300만원 이상인 직원의 그룹별 평균(반올림) 급여 조회
SELECT DEPT_CODE, ROUND(AVG(SALARY))
FROM EMPLOYEE
WHERE SALARY >= 3000000
GROUP BY DEPT_CODE;
-- 부서코드와 급여 평균(반올림)이 300만원 이상인 그룹 조회
SELECT DEPT_CODE, ROUND(AVG(SALARY))
FROM EMPLOYEE
GROUP BY DEPT_CODE
HAVING ROUND(AVG(SALARY)) >= 3000000;

-- 부서 별 그룹의 급여 합계 중 9백만원을 초과하는 부서 코드와 급여 합계(부서 코드 순으로 정렬)
SELECT DEPT_CODE,SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE
HAVING SUM(SALARY) > 9000000
ORDER BY DEPT_CODE;

-- 집계함수(ROLLUP, CUBE) : 그룹 별 산충한 결과 값을 집계 계산
SELECT JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY JOB_CODE
ORDER BY JOB_CODE;

SELECT JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY ROLLUP(JOB_CODE)
ORDER BY JOB_CODE;

SELECT JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY CUBE(JOB_CODE)
ORDER BY JOB_CODE;

-- ROLLUP함수 : 그룹별로 묶여 있는 것에 대해 중간집계 처리를 함
-- 인자로 전달 받은 것 중에서 가장 먼저 지정한 인자에 대해 그룹별 중간집계
SELECT DEPT_CODE,JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY ROLLUP(DEPT_CODE, JOB_CODE)
ORDER BY DEPT_CODE;

-- CUBE함수 : 그룹별로 중간 집계 처리
-- 인자로 전달 받은 것 모두에 대해 그룹별 중간집계
SELECT DEPT_CODE, JOB_CODE,SUM(SALARY)
FROM EMPLOYEE
GROUP BY CUBE(DEPT_CODE, JOB_CODE)
ORDER BY DEPT_CODE;

-- GROUPING 함수
-- ROLLUP이나 CUBE에 의한 산출물이 인자로 전달받은 컬럼의 산출물이면 0을 반환, 아니면 1반환
SELECT DEPT_CODE, JOB_CODE, SUM(SALARY),
        GROUPING(DEPT_CODE) "부서별 그룹 묶인 상태",
        GROUPING(JOB_CODE) "직급별 그룹 묶인 상태"
FROM EMPLOYEE
GROUP BY ROLLUP(DEPT_CODE,JOB_CODE)
ORDER BY DEPT_CODE;

-- 집합 연산자
-- UNION : 합집합 OR
SELECT EMP_ID,EMP_NAME
FROM EMPLOYEE
WHERE EMP_ID = 200
UNION
SELECT EMP_ID, EMP_NAME
FROM EMPLOYEE
WHERE EMP_ID = 201;

-- DEPT_CODE가 D5이거나 급여가 300만원을 초과하는 직원의 사번, 이름, 부서코드, 급여 조회
SELECT EMP_ID,EMP_NAME,DEPT_CODE,SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5'
UNION
SELECT EMP_ID,EMP_NAME,DEPT_CODE,SALARY
FROM EMPLOYEE
WHERE SALARY > 3000000;

SELECT EMP_ID,EMP_NAME,DEPT_CODE,SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5' OR SALARY > 3000000;

-- UNION ALL : OR 결과에 AND 결과 합쳐짐(합집합 + 교집합 --> 중복된 부분이 두번 포함)
SELECT EMP_ID,EMP_NAME,DEPT_CODE,SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5'
UNION ALL
SELECT EMP_ID,EMP_NAME,DEPT_CODE,SALARY
FROM EMPLOYEE
WHERE SALARY > 3000000;
-- INTERSECT : 교집합 AND
SELECT EMP_ID,EMP_NAME,DEPT_CODE,SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5'
INTERSECT
SELECT EMP_ID,EMP_NAME,DEPT_CODE,SALARY
FROM EMPLOYEE
WHERE SALARY > 3000000;

SELECT EMP_ID,EMP_NAME,DEPT_CODE,SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5' AND SALARY > 3000000;

-- MINUS : 차집합
SELECT EMP_ID,EMP_NAME,DEPT_CODE,SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5'
MINUS
SELECT EMP_ID,EMP_NAME,DEPT_CODE,SALARY
FROM EMPLOYEE
WHERE SALARY > 3000000;

SELECT EMP_ID,EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5' AND SALARY <= 3000000;

-- GROUNPING SETS : 그룹별로 처리된 여러 개의 SELECT문을 하나로 합칠 때 사용
SELECT DEPT_CODE, JOB_CODE, MANAGER_ID, FLOOR(AVG(SALARY))
FROM EMPLOYEE
GROUP BY DEPT_CODE, JOB_CODE, MANAGER_ID;

SELECT DEPT_CODE, MANAGER_ID, FLOOR(AVG(SALARY))
FROM EMPLOYEE
GROUP BY DEPT_CODE, MANAGER_ID;

SELECT JOB_CODE, MANAGER_ID, FLOOR(AVG(SALARY))
FROM EMPLOYEE
GROUP BY JOB_CODE,MANAGER_ID;

SELECT DEPT_CODE, JOB_CODE, MANAGER_ID, FLOOR(AVG(SALARY))
FROM EMPLOYEE
GROUP BY GROUPING SETS(
           (DEPT_CODE,JOB_CODE,MANAGER_ID),
           (DEPT_CODE,MANAGER_ID),
           (JOB_CODE,MANAGER_ID))
ORDER BY DEPT_CODE;





